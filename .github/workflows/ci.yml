name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            build_type: "Debug",
            cc: "gcc-9",
            cxx: "g++-9",
            exeExtension: ""
          }
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            build_type: "Debug",
            cc: "cl",
            cxx: "cl",
            generators: "Visual Studio 16 2019",
            exeExtension: ".exe"
          }

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies on ubuntu
      if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
      run: |
        sudo apt-get update
        sudo apt-get install cmake ${{ matrix.config.cc }} ${{ matrix.config.cxx }} qt5-default
        cmake --version
        gcc --version
        g++ --version
        qtchooser -print-env

    - name: Install CMake on Windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        choco install cmake

    - name: Install Qt on Windows
      if: startsWith(matrix.config.os, 'windows')
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        setup-python: 'false'

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
      env:
        CC:   ${{ matrix.config.cc }}
        CXX:  ${{ matrix.config.cxx }}

    - name: Build
      run: cmake --build build --config ${{ matrix.config.build_type }}

    - name: CommonTest
      working-directory: build
      run: Tests/Common/commonTests${{ matrix.config.exeExtension }}

    - name: BabelWiresTest
      working-directory: build
      run: Tests/BabelWires/babelWiresTests${{ matrix.config.exeExtension }}
